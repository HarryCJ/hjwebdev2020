{"version":3,"sources":["redux/reducers/siteReducer.js","redux/reducers/authReducer.js","redux/reducers/addressReducer.js","redux/reducers/offlineReducer.js","redux/reducers/checkReducer.js","redux/reducers/userReducer.js","redux/reducers/reportReducer.js","redux/reducers/settingsReducer.js","redux/reducers/index.js","redux/actions/types.js","redux/store.js","components/DelayLink.js","redux/actions/siteActions.js","components/ProjectTile.js","components/Page.js","ProjectsSPGPage.js","ProjectsPage.js","App.js","serviceWorker.js","index.js"],"names":["initialState","createBrowserHistory","history","routes","home","projects","projectsSAB","projectsAB","projectsSamAndMax","projectsSPG","authKey","window","localStorage","getItem","loginError","currentID","parseInt","addressMessages","addresses","getMessageID","id","setItem","setOfflineQueue","offlineQueue","localForage","JSON","stringify","console","log","navigator","serviceWorker","ready","then","swRegistration","sync","register","onlineCount","offlineFileCount","savedFilesToDelete","stringifyCheck","validatedData","filesToDelete","Object","keys","forEach","key","roomItem","comments","commentItem","image","length","newImages","url","push","item","checkMessages","checks","deleteAutoSave","checkID","result","forageComments","a","imageItem","saveItem","parse","epFiles","concat","rooms","roomFiles","removeItem","getFilesToDelete","userMessages","userList","createUserErrors","showCreateUserModal","reportMessages","reports","settingsMessages","hiddenElement","settings","midterm_declaration","disclaimer","room_names","default_rooms","isLoading","combineReducers","site","state","action","type","auth","payload","address","clearResults","params","page","assign","slice","results","i","message","splice","filter","id_array","removeID","offline","Array","from","status","check","user","report","middleware","thunk","store","createStore","rootReducer","applyMiddleware","DelayLink","props","handleClick","e","replace","to","delay","onDelayStart","onDelayEnd","defaultPrevented","preventDefault","timeout","setTimeout","this","clearTimeout","onClick","React","Component","defaultProps","contextTypes","Link","setPageOpacity","value","dispatch","document","querySelector","style","setProperty","ProjectTile","projectURL","className","src","imgURL","alt","imgAlt","title","connect","Page","inner","ProjectsSPGPage","Col","sm","href","ProjectsPage","projectsSABPage","projectsABPage","projectsSamAndMaxPage","App","anime","targets","keyframes","opacity","duration","easing","Container","Row","exact","path","component","Boolean","location","hostname","match","rootElement","getElementById","ReactDOM","render","registration","unregister"],"mappings":"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","file":"static/js/main.9a69d580.chunk.js","sourcesContent":["// import { LOGIN, LOGOUT, LOGIN_ERROR, SET_CURRENT_ID } from '../actions/types'\r\n\r\nimport { createBrowserHistory } from 'history';\r\nconst history = createBrowserHistory()\r\n\r\nconst initialState = {\r\n\thistory: createBrowserHistory(),\r\n\troutes: {\r\n\t  home: \"/\",\r\n\t  projects: \"/projects\",\r\n\t  projectsSAB: \"/projects/sab\",\r\n\t  projectsAB: \"/projects/ab\",\r\n\t  projectsSamAndMax: \"/projects/samandmax\",\r\n\t  projectsSPG: \"/projects/sohamplaygroup\",\r\n\t},\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n\t// console.log(\"action.payload\", action.payload)\r\n\tswitch(action.type) {\r\n\t\t// case SET_CURRENT_ID:\r\n\t\t// \treturn {\r\n\t\t// \t\t...state,\r\n\t\t// \t\tcurrentID: action.payload,\r\n\t\t// \t}\r\n\t\t// \t/* falls through */\r\n\t\t// case LOGIN:\r\n\t\t// \treturn {\r\n\t\t// \t\t...state,\r\n\t\t// \t\tloginError: false,\r\n\t\t// \t\tauthKey: action.payload,\r\n\t\t// \t}\r\n\t\t// \t falls through \r\n\t\t// case LOGOUT:\r\n\t\t// \treturn {\r\n\t\t// \t\t...state,\r\n\t\t// \t\tloginError: false,\r\n\t\t// \t\tauthKey: null,\r\n\t\t// \t}\r\n\t\t// \t/* falls through */\r\n\t\t// case LOGIN_ERROR:\r\n\t\t// \treturn {\r\n\t\t// \t\t...state,\r\n\t\t// \t\tloginError: action.payload,\r\n\t\t// \t}\r\n\t\t// \t/* falls through */\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\r\n\t}\r\n}","import { LOGIN, LOGOUT, LOGIN_ERROR, SET_CURRENT_ID } from '../actions/types'\r\n\r\nconst initialState = {\r\n\tauthKey: window.localStorage.getItem('authKey'),\r\n\tloginError: false,\r\n\tcurrentID: parseInt(window.localStorage.getItem('currentID')),\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n\tconsole.log(\"action.payload\", action.payload)\r\n\tswitch(action.type) {\r\n\t\tcase SET_CURRENT_ID:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentID: action.payload,\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase LOGIN:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloginError: false,\r\n\t\t\t\tauthKey: action.payload,\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase LOGOUT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloginError: false,\r\n\t\t\t\tauthKey: null,\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase LOGIN_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloginError: action.payload,\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\r\n\t}\r\n}","import { FETCH_ADDRESSES, CREATE_ADDRESS, REMOVE_MESSAGE, EDIT_ADDRESS, DELETE_ADDRESS, MASS_DELETE_ADDRESS, ADD_QUEUE_MESSAGE, ADD_ADDRESS_SERVER_ERROR_MESSAGE } from '../actions/types'\r\n\r\nconst initialState = {\r\n    addressMessages: [],\r\n\taddresses: {},\r\n}\r\n\r\nfunction getMessageID(){\r\n\tlet id = parseInt(window.localStorage.getItem('message-id') || \"0\")\r\n\twindow.localStorage.setItem('message-id', id+1)\r\n\treturn id\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n\tconsole.log(\"action\", action)\r\n\tlet addresses = null\r\n\tlet addressMessages = null\r\n\tswitch(action.type) {\r\n\t\tcase FETCH_ADDRESSES:\r\n\t\t\t// let newAddresses = state.addresses\r\n\t\t\t// newAddresses[action.page] = action.payload\r\n\t\t\tif (action.clearResults === true){\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\taddresses: {\r\n\t\t\t\t        [action.params.page]: action.payload\r\n\t\t\t\t      },\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\taddresses: Object.assign({}, state['addresses'], {\r\n\t\t\t\t        [action.params.page]: action.payload\r\n\t\t\t\t      }),\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase CREATE_ADDRESS:\r\n\t\t\t// addresses = Object.assign({}, state['addresses'])\r\n\t\t\t// Object.keys(addresses).forEach((page) => {\r\n\t\t\t// \taddresses[page].results.unshift(action.payload.item)\r\n\t\t\t// })\r\n\t\t\taction.payload.id = getMessageID()\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t// addresses: addresses,\r\n\t\t\t\taddressMessages: state['addressMessages'].concat([action.payload]).slice(-3),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase EDIT_ADDRESS:\r\n\t\t\t// Update existing addresses\r\n\t\t\taddresses = Object.assign({}, state['addresses'])\r\n\t\t\tObject.keys(addresses).forEach((page) => {\r\n\t\t\t\taddresses[page].results.forEach((item, i) => {\r\n\t\t\t\t\tif (item.id === action.payload.item.id)\taddresses[page].results[i] = action.payload.item\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t// Update messages\r\n\t\t\taddressMessages = state['addressMessages']\r\n\t\t\taddressMessages.forEach((message) => {\r\n\t\t\t\tif (message.item && message.item.id && message.item.id === action.payload.item.id){\r\n\t\t\t\t\tmessage.item = action.payload.item\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\taction.payload.id = getMessageID()\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\taddresses: addresses,\r\n\t\t\t\taddressMessages: addressMessages.concat([action.payload]).slice(-3),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase DELETE_ADDRESS:\r\n\t\t\taddresses = Object.assign({}, state['addresses'])\r\n\t\t\tObject.keys(addresses).forEach((page) => {\r\n\t\t\t\taddresses[page].results.forEach((item, i) => {\r\n\t\t\t\t\tif (item.id === action.payload.item.id)\taddresses[page].results.splice(i, 1)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\taddressMessages = state['addressMessages'].filter(message =>!message.item || message.item.id !== action.payload.item.id)\r\n\t\t\taction.payload.id = getMessageID()\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\taddresses: addresses,\r\n\t\t\t\taddressMessages: addressMessages.concat([action.payload]).slice(-3),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase MASS_DELETE_ADDRESS:\r\n\t\t\taddresses = Object.assign({}, state['addresses'])\r\n\t\t\taddressMessages = state['addressMessages']\r\n\t\t\taction.payload.id_array.forEach(removeID => {\r\n\t\t\t\taddressMessages = addressMessages.filter(message => !message.item || message.item.id !== removeID)\r\n\t\t\t\tObject.keys(addresses).forEach((page) => {\r\n\t\t\t\t\taddresses[page].results.forEach((item, i) => {\r\n\t\t\t\t\t\tif (removeID === item.id) addresses[page].results.splice(i, 1)\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\taction.payload.id = getMessageID()\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\taddresses: addresses,\r\n\t\t\t\taddressMessages: addressMessages.concat([action.payload]).slice(-3),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase REMOVE_MESSAGE:\r\n\t\t\taddressMessages = state['addressMessages'].filter(message => message.id !== action.payload)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\taddressMessages,\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase ADD_QUEUE_MESSAGE:\r\n\t\t\taction.payload.id = getMessageID()\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\taddressMessages: state['addressMessages'].concat([action.payload]).slice(-3),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase ADD_ADDRESS_SERVER_ERROR_MESSAGE:\r\n\t\t\taction.payload.id = getMessageID()\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\taddressMessages: state['addressMessages'].concat([action.payload]).slice(-3),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t\t// case FETCH_SITEOPTIONS:\r\n\r\n\t}\r\n}","import { PUSH_OFFLINE_QUEUE, REMOVE_OFFLINE_QUEUE_ITEM, SET_QUEUE_ITEM_PENDING, UNSET_QUEUE_ITEM_PENDING, HANDLE_ONLINE, REFRESH_OFFLINE_QUEUE, PUSH_ADDRESS_TO_OFFLINE_QUEUE, PUSH_CHECK_TO_OFFLINE_QUEUE, SAVE_CHECK } from '../actions/types'\r\nimport localForage from \"localforage\";\r\n\r\nfunction setOfflineQueue(offlineQueue){\r\n\r\n\tlocalForage.setItem('offlineQueue', JSON.stringify(offlineQueue))\r\n\r\n\tconsole.log(\"registering sync\")\r\n\tnavigator.serviceWorker.ready.then(function(swRegistration) {\r\n\t\tconsole.log(\"registering sync ok\")\r\n\t\tif (swRegistration.sync){\r\n\t \t\treturn swRegistration.sync.register('onlineSync');\r\n\t\t}\r\n\t});\r\n}\r\n\r\nconst initialState = {\r\n\tofflineQueue: [],\r\n\tonlineCount: 0,\r\n\tofflineFileCount: 0,\r\n\tsavedFilesToDelete: [],\r\n}\r\n\r\nfunction stringifyCheck(validatedData, offlineFileCount){\r\n\r\n\t// delete payload.validatedData.history\r\n\tlet filesToDelete = []\r\n\r\n\tObject.keys(validatedData).forEach(key => {\r\n\t\tif (validatedData[key]){\r\n\t\t\tif (key === \"rooms\"){\r\n\t\t\t\tvalidatedData[key].forEach(roomItem => {\r\n\t\t\t\t\tdelete roomItem.history\r\n\t\t\t\t\troomItem.comments.forEach(commentItem => {\r\n\t\t\t\t\t\tdelete commentItem.history\r\n\t\t\t\t\t\tif (commentItem.image && commentItem.image.length > 0){\r\n\t\t\t\t\t\t\tlet newImages = []\r\n\t\t\t\t\t\t\tcommentItem.image.forEach(image => {\r\n\t\t\t\t\t\t\t\tconsole.log(\"room image\", image)\r\n\t\t\t\t\t\t\t\tif (image.url && typeof image.url === 'object'){\r\n\t\t\t\t\t\t\t\t\tlocalForage.setItem(`file ${offlineFileCount+1}`, image.url)\r\n\t\t\t\t\t\t\t\t\timage.url = offlineFileCount+1\r\n\t\t\t\t\t\t\t\t\tfilesToDelete.push(offlineFileCount+1)\r\n\t\t\t\t\t\t\t\t\tofflineFileCount++\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tnewImages.push(image)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tcommentItem.image = newImages\r\n\t\t\t\t\t\t\t// localForage.setItem(`file ${offlineFileCount+1}`, commentItem.image)\r\n\t\t\t\t\t\t\t// commentItem.image = offlineFileCount+1\r\n\t\t\t\t\t\t\t// offlineFileCount++\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} else if (key === 'comments'){\r\n\t\t\t\tvalidatedData[key].forEach(commentItem => {\r\n\t\t\t\t\tdelete commentItem.history\r\n\t\t\t\t\tif (commentItem.image && commentItem.image.length > 0 && typeof commentItem.image[0] === 'object'){\r\n\t\t\t\t\t\tlet newImages = []\r\n\t\t\t\t\t\tcommentItem.image.forEach(image => {\r\n\t\t\t\t\t\t\tconsole.log(\"comment image\", image)\r\n\t\t\t\t\t\t\tif (image.url && typeof image.url === 'object'){\r\n\t\t\t\t\t\t\t\tconsole.log(\"saving image\", image)\r\n\t\t\t\t\t\t\t\tlocalForage.setItem(`file ${offlineFileCount+1}`, image.url)\r\n\t\t\t\t\t\t\t\timage.url = offlineFileCount+1\r\n\t\t\t\t\t\t\t\tfilesToDelete.push(offlineFileCount+1)\r\n\t\t\t\t\t\t\t\tofflineFileCount++\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnewImages.push(image)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tcommentItem.image = newImages\r\n\t\t\t\t\t\t// localForage.setItem(`file ${offlineFileCount+1}`, commentItem.image)\r\n\t\t\t\t\t\t// commentItem.image = offlineFileCount+1\r\n\t\t\t\t\t\t// offlineFileCount++\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t} else if (key === 'signature_image') {\r\n\t\t\t\tif (validatedData[key] && typeof validatedData[key] === 'object'){\r\n\t\t\t\t\tlocalForage.setItem(`file ${offlineFileCount+1}`, validatedData[key])\r\n\t\t\t\t\tvalidatedData[key] = offlineFileCount+1\r\n\t\t\t\t\tofflineFileCount++\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\tconsole.log(\"new offline validatedData\", validatedData)\r\n\r\n\tlocalForage.setItem('offlineFileCount', offlineFileCount)\r\n\treturn {item: validatedData, offlineFileCount: offlineFileCount, filesToDelete: filesToDelete}\r\n}\r\n\r\n// function stringifyAddress(item, offlineFileCount){\r\n// \tlocalForage.setItem(`file ${offlineFileCount+1}`, item.raw.image)\r\n// \titem.raw.image = offlineFileCount+1\r\n// \tofflineFileCount+=1\r\n// \tlocalForage.setItem('offlineFileCount', offlineFileCount)\r\n// \treturn {item: item, offlineFileCount: offlineFileCount}\r\n// }\r\n\r\nexport default function(state = initialState, action) {\r\n\tconsole.log(\"action.payload\", action.payload)\r\n\tlet offlineQueue = []\r\n\tlet offline = null\r\n\tswitch(action.type) {\r\n\t\tcase SAVE_CHECK:\r\n\t\t\tdelete action.payload.history\r\n\t\t\tif (action.filesToDelete && action.filesToDelete.length > 0){\r\n            \tfor (const imageItem of action.filesToDelete) {\r\n      \t\t\t\tif (typeof imageItem === 'number') localForage.removeItem(`file ${imageItem}`)\r\n            \t}\r\n\t\t\t}\r\n\t\t\toffline = stringifyCheck(action.payload, state.offlineFileCount)\r\n\t\t\tlocalForage.setItem(`save_check_${offline.item.id}`, JSON.stringify(offline.item))\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tofflineFileCount: offline.offlineFileCount,\r\n\t\t\t\tsavedFilesToDelete: offline.filesToDelete,\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase PUSH_CHECK_TO_OFFLINE_QUEUE:\r\n\t\t\tconsole.log(\"offline, storing in queue\")\r\n\t\t\tofflineQueue = Array.from(state.offlineQueue)\r\n\t\t\tconsole.log(\"offlineQueue\", offlineQueue)\r\n\t\t\taction.payload.id = offlineQueue.length > 0 ? offlineQueue[offlineQueue.length-1].id+1 : 1\r\n\t\t\tdelete action.payload.validatedData.history\r\n\t\t\toffline = stringifyCheck(action.payload.validatedData, state.offlineFileCount)\r\n\t\t\tconsole.log(\"offline\", offline)\r\n\t\t\taction.payload.item = offline.item\r\n\t\t\t// offline.item.type = 'editCheck'\r\n\t\t\tofflineQueue.push(action.payload)\r\n\t\t\tconsole.log(\"offlineQueue\", offlineQueue)\r\n\t\t\tsetOfflineQueue(offlineQueue)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tofflineQueue,\r\n\t\t\t\tofflineFileCount: offline.offlineFileCount\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase PUSH_ADDRESS_TO_OFFLINE_QUEUE:\r\n\t\t\tofflineQueue = Array.from(state.offlineQueue)\r\n\t\t\taction.payload.id = offlineQueue.length > 0 ? offlineQueue[offlineQueue.length-1].id+1 : 1\r\n\t\t\t// offline = stringifyAddress(action.payload, state.offlineFileCount)\r\n\t\t\tofflineQueue.push(action.payload)\r\n\t\t\tsetOfflineQueue(offlineQueue)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tofflineQueue,\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase PUSH_OFFLINE_QUEUE:\r\n\t\t\tconsole.log(\"offline, storing in queue\")\r\n\t\t\tofflineQueue = Array.from(state.offlineQueue)\r\n\t\t\taction.payload.id = offlineQueue.length > 0 ? offlineQueue[offlineQueue.length-1].id+1 : 1\r\n\t\t\tofflineQueue.push(action.payload)\r\n\t\t\tconsole.log(\"offlineQueue\", offlineQueue)\r\n\t\t\tsetOfflineQueue(offlineQueue)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tofflineQueue,\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase REMOVE_OFFLINE_QUEUE_ITEM:\r\n\t\t\tofflineQueue = Array.from(state.offlineQueue).filter(item => item.id !== action.payload.id)\r\n\t\t\tconsole.log(\"offlineQueue\", offlineQueue)\r\n\t\t\tlocalForage.setItem('offlineQueue', JSON.stringify(offlineQueue))\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tofflineQueue,\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase SET_QUEUE_ITEM_PENDING:\r\n\t\t\tofflineQueue = Array.from(state.offlineQueue)\r\n\t\t\tofflineQueue.forEach(item => {\r\n\t\t\t\tif (item.id === action.payload.id) item.status = 'pending'\r\n\t\t\t})\r\n\t\t\tconsole.log(\"offlineQueue\", offlineQueue)\r\n\t\t\tlocalForage.setItem('offlineQueue', JSON.stringify(offlineQueue))\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tofflineQueue,\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase UNSET_QUEUE_ITEM_PENDING:\r\n\t\t\tofflineQueue = Array.from(state.offlineQueue)\r\n\t\t\tofflineQueue.forEach(item => {\r\n\t\t\t\tif (item.id === action.payload.id) item.status = null\r\n\t\t\t})\r\n\t\t\tconsole.log(\"offlineQueue\", offlineQueue)\r\n\t\t\tsetOfflineQueue(offlineQueue)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tofflineQueue,\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase HANDLE_ONLINE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tonlineCount: state.onlineCount+1,\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase REFRESH_OFFLINE_QUEUE:\r\n\t\t\tif (action.offlineQueue){\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tofflineQueue: action.offlineQueue,\r\n\t\t\t\t}\r\n\t\t\t} else if (action.offlineFileCount){\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tofflineFileCount: action.offlineFileCount,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t\t// case FETCH_SITEOPTIONS:\r\n\r\n\t}\r\n}","import { FETCH_CHECKS, CREATE_CHECK, REMOVE_MESSAGE, EDIT_CHECK, DELETE_CHECK, MASS_DELETE_CHECK, ADD_QUEUE_MESSAGE, ADD_CHECK_SERVER_ERROR_MESSAGE } from '../actions/types'\r\nimport localForage from \"localforage\";\r\n\r\nconst initialState = {\r\n    checkMessages: [],\r\n\tchecks: {},\r\n}\r\n\r\nfunction getMessageID(){\r\n\tlet id = parseInt(window.localStorage.getItem('message-id') || \"0\")\r\n\twindow.localStorage.setItem('message-id', id+1)\r\n\treturn id\r\n}\r\n\r\nfunction deleteAutoSave(checkID){\r\n\r\n\tlocalForage.getItem(`save_check_${checkID}`).then((result) => {\r\n\t\tif (result){\r\n\t      let getFilesToDelete = async (result) => {\r\n\t        async function forageComments(comments){\r\n\t          let filesToDelete = []\r\n\t          for (const commentItem of comments) {\r\n\t            if (commentItem.image && commentItem.image.length > 0){\r\n\t              for (const imageItem of commentItem.image) {\r\n\t                if (imageItem.url && typeof imageItem.url === 'number'){\r\n\t                  filesToDelete.push(imageItem.url)\r\n\t                }\r\n\t              }\r\n\t            }\r\n\t          }\r\n\t          return filesToDelete\r\n\t        }\r\n\r\n\t        let filesToDelete = []\r\n\t        let saveItem = JSON.parse(result)\r\n\t        let epFiles = await forageComments(saveItem.comments)\r\n\t        filesToDelete = filesToDelete.concat(epFiles)\r\n\t        for (const roomItem of saveItem.rooms) {\r\n\t          let roomFiles = await forageComments(roomItem.comments)\r\n\t          filesToDelete = filesToDelete.concat(roomFiles)\r\n\t        }\r\n\t        console.log(\"deleteAutoSave filesToDelete\", filesToDelete)\r\n\t        for (const imageItem of filesToDelete) {\r\n\t        \tlocalForage.removeItem(`file ${imageItem}`)\r\n\t        }\r\n\t        localForage.removeItem(`save_check_${checkID}`)\r\n\t      }\r\n\t      getFilesToDelete(result)\r\n\t\t}\r\n\t})\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n\tconsole.log(\"action\", action)\r\n\tlet checks = null\r\n\tlet checkMessages = null\r\n\tswitch(action.type) {\r\n\t\tcase FETCH_CHECKS:\r\n\t\t\t// let newAddresses = state.checks\r\n\t\t\t// newAddresses[action.page] = action.payload\r\n\t\t\tif (action.clearResults === true){\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tchecks: {\r\n\t\t\t\t        [action.params.page]: action.payload\r\n\t\t\t\t      },\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tchecks: Object.assign({}, state['checks'], {\r\n\t\t\t\t        [action.params.page]: action.payload\r\n\t\t\t\t      }),\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase CREATE_CHECK:\r\n\t\t\taction.payload.id = getMessageID()\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcheckMessages: state['checkMessages'].concat([action.payload]).slice(-3),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase EDIT_CHECK:\r\n\t\t\t// Update existing check\r\n\t\t\tchecks = Object.assign({}, state['checks'])\r\n\t\t\tObject.keys(checks).forEach((page) => {\r\n\t\t\t\tchecks[page].results.forEach((item, i) => {\r\n\t\t\t\t\tif (item.id === action.payload.item.id)\tchecks[page].results[i] = action.payload.item\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t// Delete autosave\r\n\t\t\tdeleteAutoSave(action.payload.item.id)\r\n\t\t\t// Update messages\r\n\t\t\tcheckMessages = state['checkMessages']\r\n\t\t\tcheckMessages.forEach((message) => {\r\n\t\t\t\tif (message.item && message.item.id && message.item.id === action.payload.item.id){\r\n\t\t\t\t\tmessage.item = action.payload.item\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\taction.payload.id = getMessageID()\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tchecks: checks,\r\n\t\t\t\tcheckMessages: checkMessages.concat([action.payload]).slice(-3),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase DELETE_CHECK:\r\n\t\t\tchecks = Object.assign({}, state['checks'])\r\n\t\t\tcheckMessages = state['checkMessages'].filter(message =>!message.item || message.item.id !== action.payload.item.id)\r\n\t\t\tObject.keys(checks).forEach((page) => {\r\n\t\t\t\tchecks[page].results.forEach((item, i) => {\r\n\t\t\t\t\tif (item.id === action.payload.item.id)\tchecks[page].results.splice(i, 1)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\taction.payload.id = getMessageID()\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tchecks: checks,\r\n\t\t\t\tcheckMessages: checkMessages.concat([action.payload]).slice(-3),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase MASS_DELETE_CHECK:\r\n\t\t\tchecks = Object.assign({}, state['checks'])\r\n\t\t\tcheckMessages = state['checkMessages']\r\n\t\t\taction.payload.id_array.forEach(removeID => {\r\n\t\t\t\tcheckMessages = checkMessages.filter(message =>!message.item || message.item.id !== removeID)\r\n\t\t\t\tObject.keys(checks).forEach((page) => {\r\n\t\t\t\t\tchecks[page].results.forEach((item, i) => {\r\n\t\t\t\t\t\tif (removeID === item.id) checks[page].results.splice(i, 1)\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\taction.payload.id = getMessageID()\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tchecks: checks,\r\n\t\t\t\tcheckMessages: checkMessages.concat([action.payload]).slice(-3),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase REMOVE_MESSAGE:\r\n\t\t\tcheckMessages = state['checkMessages'].filter(message => message.id !== action.payload)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcheckMessages,\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase ADD_QUEUE_MESSAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcheckMessages: state['checkMessages'].concat([action.payload]).slice(-3),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase ADD_CHECK_SERVER_ERROR_MESSAGE:\r\n\t\t\taction.payload.id = getMessageID()\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcheckMessages: state['checkMessages'].concat([action.payload]).slice(-3),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t\t// case FETCH_SITEOPTIONS:\r\n\r\n\t}\r\n}","import { GET_USER_LIST, CREATE_USER, EDIT_USER, MASS_DELETE_USER, REMOVE_MESSAGE, ADD_QUEUE_MESSAGE, ADD_USER_SERVER_ERROR_MESSAGE, ADD_USER_MESSAGE, DELETE_USER, SET_SHOW_CREATE_USER_MODAL, SET_CREATE_USER_ERRORS } from '../actions/types'\r\n\r\nconst initialState = {\r\n    userMessages: [],\r\n\tuserList: [],\r\n\tcreateUserErrors: {},\r\n\tshowCreateUserModal: false,\r\n}\r\n\r\nfunction getMessageID(){\r\n\tlet id = parseInt(window.localStorage.getItem('message-id') || \"0\")\r\n\twindow.localStorage.setItem('message-id', id+1)\r\n\treturn id\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n\tconsole.log(\"action.payload\", action.payload)\r\n\tlet userList = []\r\n\tlet userMessages = []\r\n\tswitch(action.type) {\r\n\t\tcase SET_SHOW_CREATE_USER_MODAL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowCreateUserModal: action.payload,\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase SET_CREATE_USER_ERRORS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcreateUserErrors: action.payload,\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase GET_USER_LIST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserList: action.payload,\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase CREATE_USER:\r\n\t\t\t// userList = Object.assign({}, state['userList'])\r\n\t\t\t// Object.keys(userList).forEach((page) => {\r\n\t\t\t// \tuserList[page].results.unshift(action.payload.item)\r\n\t\t\t// })\r\n\t\t\taction.payload.id = getMessageID()\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t// userList: userList,\r\n\t\t\t\tuserMessages: state['userMessages'].concat([action.payload]).slice(-3),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase EDIT_USER:\r\n\t\t\t// Update existing userList\r\n\t\t\tuserList = state['userList']\r\n\t\t\tuserList.forEach((item, i) => {\r\n\t\t\t\tif (item.id === action.payload.item.id)\tuserList[i] = action.payload.item\r\n\t\t\t})\r\n\t\t\t// Update messages\r\n\t\t\tuserMessages = state['userMessages']\r\n\t\t\tuserMessages.forEach((message) => {\r\n\t\t\t\tif (message.item && message.item.id && message.item.id === action.payload.item.id){\r\n\t\t\t\t\tmessage.item = action.payload.item\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\taction.payload.id = getMessageID()\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserList: userList,\r\n\t\t\t\tuserMessages: userMessages.concat([action.payload]).slice(-3),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase MASS_DELETE_USER:\r\n\t\t\tuserList = state['userList']\r\n\t\t\tuserMessages = state['userMessages']\r\n\t\t\taction.payload.id_array.forEach(removeID => {\r\n\t\t\t\tuserMessages = userMessages.filter(message =>!message.item || message.item.id !== removeID)\r\n\t\t\t\tuserList.forEach((item, i) => {\r\n\t\t\t\t\tif (removeID === item.id) userList.splice(i, 1)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\taction.payload.id = getMessageID()\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserList: userList,\r\n\t\t\t\tuserMessages: state['userMessages'].concat([action.payload]).slice(-3),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase ADD_USER_MESSAGE:\r\n\t\t\taction.payload.id = getMessageID()\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserMessages: state['userMessages'].concat([action.payload]).slice(-3),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase REMOVE_MESSAGE:\r\n\t\t\tuserMessages = state['userMessages'].filter(message => message.id !== action.payload)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserMessages,\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase ADD_QUEUE_MESSAGE:\r\n\t\t\taction.payload.id = getMessageID()\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserMessages: state['userMessages'].concat([action.payload]).slice(-3),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase ADD_USER_SERVER_ERROR_MESSAGE:\r\n\t\t\taction.payload.id = getMessageID()\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserMessages: state['userMessages'].concat([action.payload]).slice(-3),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase DELETE_USER:\r\n\t\t\tuserList = state['userList']\r\n\t\t\tuserMessages = state['userMessages'].filter(message =>!message.item || message.item.id !== action.payload.item.id)\r\n\t\t\tuserList.forEach((item, i) => {\r\n\t\t\t\tif (item.id === action.payload.item.id)\tuserList.splice(i, 1)\r\n\t\t\t})\r\n\t\t\taction.payload.id = getMessageID()\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserList: userList,\r\n\t\t\t\tuserMessages: userMessages.concat([action.payload]).slice(-3),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import { FETCH_REPORTS, ADD_REPORT_SERVER_ERROR_MESSAGE } from '../actions/types'\r\n\r\nconst initialState = {\r\n    reportMessages: [],\r\n\treports: {},\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n\tconsole.log(\"action\", action)\r\n\tswitch(action.type) {\r\n\t\tcase FETCH_REPORTS:\r\n\t\t\tif (action.clearResults === true){\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\treports: {\r\n\t\t\t\t        [action.params.page]: action.payload\r\n\t\t\t\t      },\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\treports: Object.assign({}, state['reports'], {\r\n\t\t\t\t        [action.params.page]: action.payload\r\n\t\t\t\t      }),\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\t// case CREATE_ADDRESS:\r\n\t\t// \treturn {\r\n\t\t// \t\t...state,\r\n\t\t// \t\taddressMessages: state['addressMessages'].concat([action.payload]),\r\n\t\t// \t}\r\n\t\t// \t/* falls through */\r\n\t\t// case EDIT_ADDRESS:\r\n\t\t// \taddresses = Object.assign({}, state['addresses'])\r\n\t\t// \tObject.keys(addresses).forEach((page) => {\r\n\t\t// \t\taddresses[page].results.forEach((item, i) => {\r\n\t\t// \t\t\tif (item.id === action.payload.item.id)\taddresses[page].results[i] = action.payload.item\r\n\t\t// \t\t})\r\n\t\t// \t})\r\n\t\t// \treturn {\r\n\t\t// \t\t...state,\r\n\t\t// \t\taddresses: addresses,\r\n\t\t// \t\taddressMessages: state['addressMessages'].concat([action.payload]),\r\n\t\t// \t}\r\n\t\t// \t/* falls through */\r\n\t\t// case DELETE_ADDRESS:\r\n\t\t// \taddresses = Object.assign({}, state['addresses'])\r\n\t\t// \tObject.keys(addresses).forEach((page) => {\r\n\t\t// \t\taddresses[page].results.forEach((item, i) => {\r\n\t\t// \t\t\tif (item.id === action.payload.item.id)\taddresses[page].results.splice(i, 1)\r\n\t\t// \t\t})\r\n\t\t// \t})\r\n\t\t// \treturn {\r\n\t\t// \t\t...state,\r\n\t\t// \t\taddresses: addresses,\r\n\t\t// \t\taddressMessages: state['addressMessages'].concat([action.payload]),\r\n\t\t// \t}\r\n\t\t// \t/* falls through */\r\n\t\t// case MASS_DELETE_ADDRESS:\r\n\t\t// \taddresses = Object.assign({}, state['addresses'])\r\n\t\t// \taction.payload.id_array.forEach(removeID => {\r\n\t\t// \t\tObject.keys(addresses).forEach((page) => {\r\n\t\t// \t\t\taddresses[page].results.forEach((item, i) => {\r\n\t\t// \t\t\t\tif (removeID === item.id) addresses[page].results.splice(i, 1)\r\n\t\t// \t\t\t})\r\n\t\t// \t\t})\r\n\t\t// \t})\r\n\t\t// \treturn {\r\n\t\t// \t\t...state,\r\n\t\t// \t\taddresses: addresses,\r\n\t\t// \t\taddressMessages: state['addressMessages'].concat([action.payload]),\r\n\t\t// \t}\r\n\t\t// \t/* falls through */\r\n\t\t// case REMOVE_MESSAGE:\r\n\t\t// \tconst addressMessages = state['addressMessages'].filter(message => message.type !== action.payload.type && message.item.id !== action.payload.item.id)\r\n\t\t// \treturn {\r\n\t\t// \t\t...state,\r\n\t\t// \t\taddressMessages,\r\n\t\t// \t}\r\n\t\t// \t/* falls through */\r\n\t\t// case ADD_QUEUE_MESSAGE:\r\n\t\t// \treturn {\r\n\t\t// \t\t...state,\r\n\t\t// \t\taddressMessages: state['addressMessages'].concat([action.payload]),\r\n\t\t// \t}\r\n\t\t// \t/* falls through */\r\n\t\tcase ADD_REPORT_SERVER_ERROR_MESSAGE:\r\n\t\t\tlet id = window.localStorage.getItem('server-error-id') || 0\r\n\t\t\taction.payload.item = {id: id}\r\n\t\t\twindow.localStorage.setItem('server-error-id', id+1)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\taddressMessages: state['addressMessages'].concat([action.payload]),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import { FETCH_SETTINGS, SUBMIT_SETTINGS, SET_SETTINGS_LOADING, ADD_SETTINGS_SERVER_ERROR_MESSAGE, REMOVE_MESSAGE, ADD_QUEUE_MESSAGE } from '../actions/types'\r\n\r\nconst initialState = {\r\n    settingsMessages: [],\r\n    hiddenElement: null,\r\n\tsettings: {\r\n      midterm_declaration: \"\",\r\n      disclaimer: \"\",\r\n      room_names: [],\r\n      default_rooms: [],\r\n\t},\r\n\tisLoading: false,\r\n}\r\n\r\nfunction getMessageID(){\r\n\tlet id = parseInt(window.localStorage.getItem('message-id') || \"0\")\r\n\twindow.localStorage.setItem('message-id', id+1)\r\n\treturn id\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n\tconsole.log(\"action\", action)\r\n\tlet settingsMessages = null\r\n\tswitch(action.type) {\r\n\t\tcase FETCH_SETTINGS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tsettings: Object.assign({}, state['settings'], {\r\n\t\t\t        midterm_declaration: action.midterm_declaration,\r\n\t\t\t        disclaimer: action.disclaimer,\r\n\t\t\t        room_names: action.room_names,\r\n\t\t\t        default_rooms: action.default_rooms,\r\n\t\t\t      }),\r\n\t\t\t\thiddenElement: action.hiddenElement,\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase SUBMIT_SETTINGS:\r\n\t\t\taction.payload.id = getMessageID()\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tsettingsMessages: state['settingsMessages'].concat([action.payload]).slice(-3),\r\n\t\t\t\tsettings: Object.assign({}, state['settings'], {\r\n\t\t\t        midterm_declaration: action.midterm_declaration,\r\n\t\t\t        disclaimer: action.disclaimer,\r\n\t\t\t        room_names: action.room_names,\r\n\t\t\t        default_rooms: action.default_rooms,\r\n\t\t\t      }),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase SET_SETTINGS_LOADING:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: action.payload,\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase ADD_SETTINGS_SERVER_ERROR_MESSAGE:\r\n\t\t\taction.payload.id = getMessageID()\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsettingsMessages: state['settingsMessages'].concat([action.payload]).slice(-3),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase REMOVE_MESSAGE:\r\n\t\t\tsettingsMessages = state['settingsMessages'].filter(message => message.id !== action.payload)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsettingsMessages,\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tcase ADD_QUEUE_MESSAGE:\r\n\t\t\taction.payload.id = getMessageID()\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsettingsMessages: state['settingsMessages'].concat([action.payload]).slice(-3),\r\n\t\t\t}\r\n\t\t\t/* falls through */\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import { combineReducers } from 'redux'\r\nimport siteReducer from './siteReducer'\r\nimport authReducer from './authReducer'\r\nimport addressReducer from './addressReducer'\r\nimport offlineReducer from './offlineReducer'\r\nimport checkReducer from './checkReducer'\r\nimport userReducer from './userReducer'\r\nimport reportReducer from './reportReducer'\r\nimport settingsReducer from './settingsReducer'\r\n\r\nexport default combineReducers({\r\n\tsite: siteReducer,\r\n\r\n\tauth: authReducer,\r\n\taddress: addressReducer,\r\n\toffline: offlineReducer,\r\n\tcheck: checkReducer,\r\n\tuser: userReducer,\r\n\treport: reportReducer,\r\n\tsettings: settingsReducer,\r\n})","export const FETCH_ADDRESSES = 'FETCH_ADDRESSES'\r\nexport const CREATE_ADDRESS = 'CREATE_ADDRESS'\r\nexport const REMOVE_MESSAGE = 'REMOVE_MESSAGE'\r\nexport const EDIT_ADDRESS = 'EDIT_ADDRESS'\r\nexport const DELETE_ADDRESS = 'DELETE_ADDRESS'\r\nexport const MASS_DELETE_ADDRESS = 'MASS_DELETE_ADDRESS'\r\nexport const ADD_QUEUE_MESSAGE = 'ADD_QUEUE_MESSAGE'\r\n\r\nexport const LOGIN = 'LOGIN'\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const SET_AUTHKEY = 'SET_AUTHKEY'\r\nexport const SET_CURRENT_ID = 'SET_CURRENT_ID'\r\n\r\nexport const PUSH_ADDRESS_TO_OFFLINE_QUEUE = 'PUSH_ADDRESS_TO_OFFLINE_QUEUE'\r\nexport const PUSH_OFFLINE_QUEUE = 'PUSH_OFFLINE_QUEUE'\r\nexport const REMOVE_OFFLINE_QUEUE_ITEM = 'REMOVE_OFFLINE_QUEUE_ITEM'\r\nexport const SET_QUEUE_ITEM_PENDING = 'SET_QUEUE_ITEM_PENDING'\r\nexport const UNSET_QUEUE_ITEM_PENDING = 'UNSET_QUEUE_ITEM_PENDING'\r\nexport const HANDLE_ONLINE = 'HANDLE_ONLINE'\r\nexport const REFRESH_OFFLINE_QUEUE = 'REFRESH_OFFLINE_QUEUE'\r\nexport const ADD_ADDRESS_SERVER_ERROR_MESSAGE = 'ADD_ADDRESS_SERVER_ERROR_MESSAGE'\r\n\r\nexport const SAVE_CHECK = 'SAVE_CHECK'\r\nexport const PUSH_CHECK_TO_OFFLINE_QUEUE = 'PUSH_CHECK_TO_OFFLINE_QUEUE'\r\nexport const FETCH_CHECKS = 'FETCH_CHECKS'\r\nexport const CREATE_CHECK = 'CREATE_CHECK'\r\nexport const EDIT_CHECK = 'EDIT_CHECK'\r\nexport const DELETE_CHECK = 'DELETE_CHECK'\r\nexport const MASS_DELETE_CHECK = 'MASS_DELETE_CHECK'\r\nexport const ADD_CHECK_SERVER_ERROR_MESSAGE = 'ADD_CHECK_SERVER_ERROR_MESSAGE'\r\n\r\nexport const GET_USER_LIST = 'GET_USER_LIST'\r\nexport const CREATE_USER = 'CREATE_USER'\r\nexport const EDIT_USER = 'EDIT_USER'\r\nexport const PUSH_USER_TO_OFFLINE_QUEUE = 'PUSH_USER_TO_OFFLINE_QUEUE'\r\nexport const ADD_USER_SERVER_ERROR_MESSAGE = 'ADD_USER_SERVER_ERROR_MESSAGE'\r\nexport const MASS_DELETE_USER = 'MASS_DELETE_USER'\r\nexport const ADD_USER_MESSAGE = 'ADD_USER_MESSAGE'\r\nexport const DELETE_USER = 'DELETE_USER'\r\nexport const SET_SHOW_CREATE_USER_MODAL = 'SET_SHOW_CREATE_USER_MODAL'\r\nexport const SET_CREATE_USER_ERRORS = 'SET_CREATE_USER_ERRORS'\r\n\r\nexport const FETCH_REPORTS = 'FETCH_REPORTS'\r\nexport const ADD_REPORT_SERVER_ERROR_MESSAGE = 'ADD_REPORT_SERVER_ERROR_MESSAGE'\r\n\r\nexport const FETCH_SETTINGS = 'FETCH_SETTINGS'\r\nexport const SUBMIT_SETTINGS = 'SUBMIT_SETTINGS'\r\nexport const ADD_ROOM = 'ADD_ROOM'\r\nexport const REMOVE_ROOM = 'REMOVE_ROOM'\r\nexport const SET_SETTINGS_LOADING = 'SET_SETTINGS_LOADING'\r\nexport const ADD_SETTINGS_SERVER_ERROR_MESSAGE = 'ADD_SETTINGS_SERVER_ERROR_MESSAGE'","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initalState = {\r\n\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(rootReducer, initalState, applyMiddleware(...middleware))\r\n\r\nexport default store","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * Wraps the React Router Link component and creates a delay after the link is clicked.\r\n */\r\nexport default class DelayLink extends React.Component {\r\n  static propTypes = {\r\n    /**\r\n     * Milliseconds to wait before registering the click.\r\n     */\r\n    delay:        PropTypes.number,\r\n    /**\r\n     * Called after the link is clicked and before the delay timer starts.\r\n     */\r\n    onDelayStart: PropTypes.func,\r\n    /**\r\n     * Called after the delay timer ends.\r\n     */\r\n    onDelayEnd:   PropTypes.func\r\n  };\r\n\r\n  static defaultProps = {\r\n    delay:        0,\r\n    onDelayStart: () => {},\r\n    onDelayEnd:   () => {}\r\n  };\r\n\r\n  static contextTypes = Link.contextTypes;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.timeout = null;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.timeout) {\r\n      clearTimeout(this.timeout);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the link is clicked\r\n   *\r\n   * @param {Event} e\r\n   */\r\n  handleClick = (e) => {\r\n    const { replace, to, delay, onDelayStart, onDelayEnd } = this.props;\r\n    const { history } = this.props;\r\n\r\n    onDelayStart(e, to);\r\n    if (e.defaultPrevented) {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n\r\n    this.timeout = setTimeout(() => {\r\n      if (replace) {\r\n        history.replace(to);\r\n      } else {\r\n        history.push(to);\r\n      }\r\n      onDelayEnd(e, to);\r\n    }, delay);\r\n  };\r\n\r\n  render() {\r\n    const props = Object.assign({}, this.props);\r\n    delete props.delay;\r\n    delete props.onDelayStart;\r\n    delete props.onDelayEnd;\r\n\r\n    return (\r\n      <Link {...props} onClick={this.handleClick} />\r\n    );\r\n  }\r\n}\r\n","// import { LOGIN, LOGOUT, LOGIN_ERROR, SET_CURRENT_ID } from './types'\r\n// import { api_url } from '../../api_url'\r\n\r\nexport const setPageOpacity = (value) => dispatch => {\r\n\tconsole.log(\"setPageOpacity\", value)\r\n\tdocument.querySelector('.page').style.setProperty('opacity', value)\r\n}","import React, { Component } from 'react';\r\n// import { Container, Table, Row, Col, Navbar, Breadcrumb, Dropdown, DropdownButton, Form, Alert, Spinner } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport DelayLink from './DelayLink.js'\r\nimport { createBrowserHistory } from 'history';\r\nimport { connect } from 'react-redux'\r\nimport { setPageOpacity } from '../redux/actions/siteActions'\r\n\r\nclass ProjectTile extends Component {\r\n\r\n  render(){\r\n    return (\r\n      <DelayLink delay={250} to={this.props.projectURL} history={this.props.history} onDelayStart={() => this.props.setPageOpacity(0)} className=\"col-sm-3 project-tile\">\r\n        <img src={this.props.imgURL} className=\"w-100\" alt={this.props.imgAlt} />\r\n        <h3 className=\"mt-2 mb-0\">{this.props.title}</h3>\r\n      </DelayLink>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  history: state.site.history,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setPageOpacity })(ProjectTile);\r\n","import React, { Component } from 'react';\r\nimport ProjectTile from './ProjectTile.js'\r\n// import { Container, Table, Row, Col, Navbar, Breadcrumb, Dropdown, DropdownButton, Form, Alert, Spinner } from 'react-bootstrap'\r\n\r\nclass Page extends Component {\r\n\r\n  render(){\r\n    return <div className=\"page\">{this.props.inner}</div>;\r\n  }\r\n}\r\n\r\nexport default Page;\r\n","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Container, Table, Row, Col, Navbar, Breadcrumb, Dropdown, DropdownButton, Form, Alert, Spinner } from 'react-bootstrap'\r\nimport anime from 'animejs';\r\nimport Page from './components/Page.js'\r\nimport ProjectTile from './components/ProjectTile.js'\r\nimport { Router } from \"react-router\";\r\nimport { Route, Switch, Link } from 'react-router-dom'\r\nimport { createBrowserHistory } from 'history';\r\nimport DelayLink from './components/DelayLink.js'\r\nimport { connect } from 'react-redux'\r\nimport { setPageOpacity } from './redux/actions/siteActions'\r\n\r\nclass ProjectsSPGPage extends Component {\r\n\r\n  componentDidMount(){\r\n      setTimeout(()=>this.props.setPageOpacity(1), 100)\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Page\r\n        inner={\r\n          <>\r\n            <DelayLink \r\n              delay={250} \r\n              to={this.props.routes.projects} \r\n              history={this.props.history}\r\n              onDelayStart={() => this.props.setPageOpacity(0)}\r\n            ><img src=\"/back-arrow.png\" className=\"back-arrow\" /></DelayLink>\r\n            <Col sm={8}>\r\n              <img src=\"/sohamplaygroup-desktop.png\" className=\"w-100\" />\r\n            </Col>\r\n            <Col sm={3}>\r\n              <h3>Soham Playgroup</h3>\r\n              <a href=\"https://sohamplaygroup.co.uk/\">Visit website</a>\r\n            </Col>\r\n          </>\r\n        }\r\n      />)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  history: state.site.history,\r\n  routes: state.site.routes,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setPageOpacity })(ProjectsSPGPage);","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Container, Table, Row, Col, Navbar, Breadcrumb, Dropdown, DropdownButton, Form, Alert, Spinner } from 'react-bootstrap'\r\nimport anime from 'animejs';\r\nimport Page from './components/Page.js'\r\nimport ProjectTile from './components/ProjectTile.js'\r\nimport { Router } from \"react-router\";\r\nimport { Route, Switch, Link } from 'react-router-dom'\r\nimport { createBrowserHistory } from 'history';\r\nimport DelayLink from './components/DelayLink.js'\r\nimport { connect } from 'react-redux'\r\nimport { setPageOpacity } from './redux/actions/siteActions'\r\n\r\nclass ProjectsPage extends Component {\r\n\r\n  componentDidMount(){\r\n      setTimeout(()=>this.props.setPageOpacity(1), 100)\r\n  }\r\n\r\n  render(){\r\n      // this.props.setPageOpacity(1)\r\n    return (\r\n      <Page\r\n        inner={\r\n          <>\r\n            <ProjectTile\r\n              title=\"Saint Andrews Bureau Routine Check App\"\r\n              projectURL={this.props.routes.projectsSAB}\r\n              imgURL=\"/sabapp.png\"\r\n              imgAlt=\"SAB App\"\r\n            />\r\n            <ProjectTile\r\n              title=\"Advanced Boosters Virtual Item Store\"\r\n              projectURL={this.props.routes.projectsAB}\r\n              imgURL=\"/abapp.png\"\r\n              imgAlt=\"Advanced Boosters\"\r\n            />\r\n            <ProjectTile\r\n              title=\"Sam and Max Website\"\r\n              projectURL={this.props.routes.projectsSamAndMax}\r\n              imgURL=\"/samandmax.png\"\r\n              imgAlt=\"Sam and Max\"\r\n            />\r\n            <ProjectTile\r\n              title=\"Soham Playgroup Website\"\r\n              projectURL={this.props.routes.projectsSPG}\r\n              imgURL=\"/sohamplaygroup.png\"\r\n              imgAlt=\"Soham Playgroup\"\r\n            />\r\n          </>\r\n        }\r\n      />)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  history: state.site.history,\r\n  routes: state.site.routes,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setPageOpacity })(ProjectsPage);","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport { Container, Table, Row, Col, Navbar, Breadcrumb, Dropdown, DropdownButton, Form, Alert, Spinner } from 'react-bootstrap'\nimport anime from 'animejs';\nimport Page from './components/Page.js'\nimport ProjectTile from './components/ProjectTile.js'\nimport { Router } from \"react-router\";\nimport { Route, Switch, Link } from 'react-router-dom'\nimport { createBrowserHistory } from 'history';\nimport DelayLink from './components/DelayLink.js'\nimport { connect } from 'react-redux'\nimport { setPageOpacity } from './redux/actions/siteActions'\nimport ProjectsSPGPage from './ProjectsSPGPage.js'\nimport ProjectsPage from './ProjectsPage.js'\n\nclass projectsSABPage extends Component {\n  render(){\n    return (\n      <Page\n        inner={\n          <>\n            <h2>Hello world</h2>\n          </>\n        }\n      />)\n  }\n}\n\nclass projectsABPage extends Component {\n  render(){\n    return (\n      <Page\n        inner={\n          <>\n            <h2>Hello world</h2>\n          </>\n        }\n      />)\n  }\n}\n\nclass projectsSamAndMaxPage extends Component {\n  render(){\n    return (\n      <Page\n        inner={\n          <>\n            <h2>Hello world</h2>\n          </>\n        }\n      />)\n  }\n}\n\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n    }\n  }\n\n  componentDidMount(){\n      anime({\n        targets: [document.querySelector('body')],\n        keyframes: [\n          {opacity: 1, duration: 1000},\n        ],\n        delay: 250,\n        easing: 'easeInOutQuad',\n      });\n  }\n\n  render() {\n    console.log(\"render\", this.state)\n    return (\n      <Container>\n              <Router history={this.props.history}>\n        <Row>\n          <div className=\"top-padding\"></div>\n          <Col sm={2}>\n            <img src=\"/logofinal.png\" className=\"App-logo\" alt=\"logo\" />\n            <div className=\"nav-links\">\n              <Link className=\"active\" to={this.props.routes.projects}>Projects</Link>\n              <a className=\"\" href=\"#\">About</a>\n              <a className=\"\" href=\"#\">Services</a>\n              <a className=\"\" href=\"#\">Contact</a>\n            </div>\n          </Col>\n          <Col sm={10}>\n            <h1>Harry Johnson Web Development</h1>\n            <h2>Full-stack developer</h2>\n            <div className=\"mt-3 mx-n3\">\n                <Switch>\n                  <Route exact path={this.props.routes.home} component={ProjectsPage}/>\n                  <Route exact path={this.props.routes.projects}  component={ProjectsPage}/>\n                  <Route exact path={this.props.routes.projectsSAB}  component={projectsSABPage}/>\n                  <Route exact path={this.props.routes.projectsAB}  component={projectsABPage}/>\n                  <Route exact path={this.props.routes.projectsSamAndMax}  component={projectsSamAndMaxPage}/>\n                  <Route exact path={this.props.routes.projectsSPG}  component={ProjectsSPGPage}/>\n                </Switch>\n            </div>\n          </Col>\n        </Row>\n              </Router>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  history: state.site.history,\n  routes: state.site.routes,\n});\n\nexport default connect(mapStateToProps, { setPageOpacity })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\n// import './css/xxs.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}